name: CI
on: 
  push:
    branches: [main]

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Modify app-config.production.yaml
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          echo "Modifying app-config.production.yaml"
          sed -i 's/POSTGRES_HOST/'"$POSTGRES_HOST"'/' app-config.production.yaml
          sed -i 's/POSTGRES_PORT/'"$POSTGRES_PORT"'/' app-config.production.yaml
          sed -i 's/POSTGRES_USER/'"$POSTGRES_USER"'/' app-config.production.yaml
          sed -i 's/POSTGRES_PASSWORD/'"$POSTGRES_PASSWORD"'/' app-config.production.yaml
          # Outras alterações no arquivo app-config.production.yaml, se necessário

    - name: Save artifact
      uses: actions/upload-artifact@v2
      with:
        name: app-config.production
        path: app-config.production.yaml

    
    - name: Use Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: 20
      
    - name: Install dependencies and Build
      run: |
        cd src
        yarn install --frozen-lockfile
        yarn tsc
        yarn build:backend --config ../../app-config.yaml

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Azure Container Registry
      run: |
        echo ${{ secrets.AZURE_ACR_PASSWORD }} | docker login ${{ secrets.AZURE_ACR_REGISTRY }} -u ${{ secrets.AZURE_ACR_USERNAME }} --password-stdin

    - name: Build and push Docker image
      working-directory: src/
      env:
        IMAGE_NAME: ${{ secrets.AZURE_ACR_REGISTRY }}/backstage:latest
      run: |
        docker build -t $IMAGE_NAME -f packages/backend/Dockerfile .
        docker push $IMAGE_NAME
    
    #- name: Build Docker Image
    #  run: |
    #    cd src
    #    docker image build . -f packages/backend/Dockerfile --tag backstage

    #- name: Login to Docker Hub
    #  run: echo ${{ secrets.DOCKERHUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      
    #- name: Build and push Docker images
    #  working-directory: src/
    #  run: |
    #    docker buildx create --use
    #    docker buildx build \
    #      --file packages/backend/Dockerfile \
    #      --tag 1bira/backstagelab:latest \
    #      --push .

    
